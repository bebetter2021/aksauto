name: Terraform Configuration Run
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:
# defaults:
#   run:
#     working-directory: /

env:
  TF_VERSION: "1.1.4"
  ARM_CLIENT_ID: '2c7dadc2-5dba-4670-b798-27d59a430217'
  ARM_CLIENT_SECRET: ${{ secrets.TGO_ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: 'e5c064d7-9c8f-4e8d-ba57-5da9f1610cb3'
  ARM_TENANT_ID: 'ea7c73d0-fb18-4161-8331-8341717ba99c'

jobs:
  terraform_plan:
    runs-on: ubuntu-latest
    name: Terraform Run
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.TF_VERSION }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }} # only used for this workspace

    - name: Terrform Init
      id: tf_init
      run: terraform init

    # - uses: cschleiden/replace-tokens@v1
    #   with:
    #     tokenPrefix: '$('
    #     tokenSuffix: ')'
    #     files: '["**/*.template"]'
    # - name: Rename vars file
    #   run: mv terraform.auto.tfvars.template terraform.auto.tfvars

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
    # # - run: echo ${{ steps.plan.outputs.stdout }}
    # # - run: echo ${{ steps.plan.outputs.stderr }}
    # # - run: echo ${{ steps.plan.outputs.exitcode }}

    - uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Install requirements
      id: requirements
      run: |
        if [[ -f ansible/requirements.txt ]]; then
          pip3 install -r ansible/requirements.txt
        fi
        if [[ -f ansible/requirements.yaml ]]; then
          ansible-galaxy install -r ansible/requirements.yaml
        fi

    - name: Terraform Apply
      id: apply
      if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve
